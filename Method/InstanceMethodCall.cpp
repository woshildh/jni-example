/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class InstanceMethodCall */

#ifndef _Included_InstanceMethodCall
#define _Included_InstanceMethodCall
#ifdef __cplusplus
extern "C" {
#endif

// 通过全局变量存储方法的 id
jmethodID MID_InstanceMethodCall_callback = NULL;

/*
 * Class:     InstanceMethodCall
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL _Java_InstanceMethodCall_initIDs(JNIEnv *env, jclass cls) {
    // 获取方法的 id 并且保存到全局变量中
    MID_InstanceMethodCall_callback = env->GetMethodID(cls, "callback", "()V"); 
}

/*
 * Class:     InstanceMethodCall
 * Method:    nativeMethod
 * Signature: ()V
 */
JNIEXPORT void JNICALL _Java_InstanceMethodCall_nativeMethod(JNIEnv *env, jobject obj) {
    // 调用方法
    env->CallVoidMethod(obj, MID_InstanceMethodCall_callback);
}

#ifdef __cplusplus
}
#endif
#endif
